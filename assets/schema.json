{
  "$id": "https://raw.githubusercontent.com/Roundaround/mc-fabric-custom-paintings/refs/heads/main/assets/schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "patternProperties": {
    "^format$": {
      "type": "integer",
      "description": "The number indicating the data format of the file. Currently unused and defaults to `1`. Reserved for future use.",
      "default": 1
    },
    "^description$": {
      "type": "string",
      "description": "A short description of the pack to show in the painting picker."
    }
  },
  "properties": {
    "version": {
      "type": "string",
      "description": "The painting pack version. Can be anything, though following semver is recommended.",
      "examples": [
        "1.0.0",
        "0.1.0-prerelease+build"
      ]
    },
    "id": {
      "type": "string",
      "description": "The unique ID of the painting pack. This must be different from all other painting packs (and different from the mod IDs for other fabric mods that add custom paintings). Cannot contain single or double quotes, colons, or whitespace (i.e. spaces, tabs).",
      "pattern": "^[^\\s:'\"]+$"
    },
    "name": {
      "type": "string",
      "description": "The name to show in the painting picker for this pack. If omitted the UI will simply show the resource pack's filename."
    },
    "sourceLegacyPack": {
      "type": "string",
      "description": "A unique string generated by the mod when migrating packs from the legacy resource pack format and used to link back to the source. Not intended for manual use."
    },
    "paintings": {
      "type": "array",
      "description": "The definitions of all the paintings to pull from in the painting picker UI. Each painting's id should correspond to the image's filename (without the '.png').",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the painting. This should correspond to the name of the painting's PNG image file in the pack's \"images\" folder (without the '.png'). Cannot contain single or double quotes, colons, or whitespace (i.e. spaces, tabs).",
            "pattern": "^[^\\s:'\"]+$"
          },
          "name": {
            "type": "string",
            "description": "The name of the painting."
          },
          "artist": {
            "type": "string",
            "description": "The artist of the painting."
          },
          "width": {
            "type": "integer",
            "description": "The number of blocks wide this painting should occupy. For example, the vanilla Donkey Kong painting would have a value of 4."
          },
          "height": {
            "type": "integer",
            "description": "The number of blocks high this painting should occupy. For example, the vanilla Donkey Kong painting would have a value of 3."
          }
        },
        "required": [
          "id",
          "width",
          "height"
        ]
      }
    },
    "migrations": {
      "type": "array",
      "description": "The automatic migrations associated with this pack. It is not likely you'll want to create one of these by hand.",
      "items": {
        "type": "object",
        "patternProperties": {
          "^description$": {
            "type": "string",
            "description": "A short description of the migration to show in the UI."
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the migration. Cannot contain single or double quotes, colons, or whitespace (i.e. spaces, tabs).",
            "pattern": "^[^\\s:'\"]+$"
          },
          "pairs": {
            "type": "array",
            "description": "A set of pairs of painting IDs written in fully-qualified form (`my_pack:first_painting`). When running a migration with the mod, all paintings that match the first ID will be reassigned to the second ID for each pair in order.",
            "items": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(?:[^\\s:'\"]+:)?[^\\s:'\"]+$"
                },
                {
                  "type": "string",
                  "pattern": "^(?:[^\\s:'\"]+:)?[^\\s:'\"]+$"
                }
              ]
            }
          }
        },
        "required": [
          "id",
          "pairs"
        ]
      }
    }
  },
  "required": [
    "id",
    "paintings"
  ]
}
